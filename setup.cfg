[wipac:cicd_setup_builder]
pypi_name = wipac-user-management
python_min = 3.8
package_paths = user_mgmt
keywords_spaced = iam

[options]
install_requires =
    cachetools
    motor
    tornado
    unidecode
    wipac-rest-tools
    wipac-keycloak-rest-services

[metadata]  # generated by wipac:cicd_setup_builder
name = wipac-user-management
version = attr: user_mgmt.__version__
url = https://github.com/WIPACrepo/user-management
author = WIPAC Developers
author_email = developers@icecube.wisc.edu
description = Services surrounding KeyCloak, that use the REST API to read/update state
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT

[coverage:run]
branch = True
source = keycloak_http_auth

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

ignore_errors = True
skip_empty = True

[coverage:html]
directory = htmlcov

[flake8]
ignore=D403,E226,E302,E305,E501,W503,W504

[semantic_release]
branch = main
version_variable = user_mgmt/__init__.py:__version__
upload_to_repository = False
upload_to_release = False
patch_without_tag = True
commit_parser = semantic_release.history.tag_parser
minor_tag = [minor]
fix_tag = [fix]
